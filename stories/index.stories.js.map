{"version":3,"file":"index.stories.js","sourceRoot":"","sources":["../../stories/index.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAkB,MAAM,KAAK,CAAC;AAG3C,OAAO,iBAAiB,CAAC;AAEzB,eAAe;IACb,KAAK,EAAE,WAAW;IAClB,SAAS,EAAE,WAAW;IACtB,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,IAAI,EAAE,SAAS;YACf,YAAY,EAAE,KAAK;YACnB,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,SAAS;SACnB;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,OAAO;YACb,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,OAAO;SACjB;QACD,KAAK,EAAE;YACL,IAAI,EAAE,OAAO;YACb,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,QAAQ;SAClB;KACF;CACF,CAAC;AAEF,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAE1D,KAAK,UAAU,OAAO,CAAC,IAAc;IACnC,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,KAAK,MAAM,IAAI,IAAI,IAAI;QAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC;IAEtD,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;AAC7C,CAAC;AAED,SAAS,cAAc,CAAC,IAAc;IACpC,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC;IACnE,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC9C,CAAC;AAgBD,MAAM,QAAQ,GAAoB,CAAC,EACjC,KAAK,GAAG,KAAK,EACb,IAAI,GAAG,EAAE,EACT,KAAK,GAAG,CAAC,EAAE,CAAC,EACZ,IAAI,GAAG,OAAO,EACd,WAAW,GAAG,cAAc,GACnB,EAAE,EAAE,CACb,KAAK;IACH,CAAC,CAAC,IAAI,CAAA;;iBAEO,KAAK;gBACN,IAAI;uBACG,WAAW;oBACd;IAChB,CAAC,CAAC,IAAI,CAAA;;kBAEQ,IAAI;kBACJ,IAAI;yBACG,WAAW;;OAE7B,CAAC;AAER,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAEzC,MAAM,CAAC,MAAM,oBAAoB,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACtD,oBAAoB,CAAC,IAAI,GAAG;IAC1B,IAAI,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC;CAChD,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACtD,oBAAoB,CAAC,IAAI,GAAG;IAC1B,KAAK,EAAE,IAAI;IACX,KAAK,EAAE;QACL,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC;QACzC,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC;KAC1C;CACF,CAAC","sourcesContent":["import { html, TemplateResult } from 'lit';\n\nimport type { Directory, Path } from '../oscd-tree.js';\nimport '../oscd-tree.js';\n\nexport default {\n  title: 'oscd-tree',\n  component: 'oscd-tree',\n  argTypes: {\n    multi: {\n      type: 'boolean',\n      defaultValue: false,\n      required: false,\n      control: 'boolean',\n    },\n    path: {\n      type: 'array',\n      defaultValue: [],\n      required: false,\n      control: 'array',\n    },\n    paths: {\n      type: 'array',\n      defaultValue: [],\n      required: false,\n      control: 'object',\n    },\n  },\n};\n\nconst data = await fetch('data.json').then(r => r.json());\n\nasync function nsdRead(path: string[]) {\n  let dir = data;\n  for (const slug of path) dir = dir[slug].dependencies;\n\n  return { path, entries: Object.keys(dir) };\n}\n\nfunction nsdIsMandatory(path: string[]) {\n  let dir = data;\n  for (const slug of path.slice(0, -1)) dir = dir[slug].dependencies;\n  return dir[path[path.length - 1]].mandatory;\n}\n\ninterface Story<T> {\n  (args: T): TemplateResult;\n  args?: Partial<T>;\n  argTypes?: Record<string, unknown>;\n}\n\ntype ArgTypes = {\n  multi?: boolean;\n  paths?: Path[];\n  path?: Path;\n  read: (path: Path) => Promise<Directory>;\n  isMandatory: (path: Path) => boolean;\n};\n\nconst Template: Story<ArgTypes> = ({\n  multi = false,\n  path = [],\n  paths = [[]],\n  read = nsdRead,\n  isMandatory = nsdIsMandatory,\n}: ArgTypes) =>\n  multi\n    ? html`<oscd-tree\n        multi\n        .paths=${paths}\n        .read=${read}\n        .isMandatory=${isMandatory}\n      ></oscd-tree>`\n    : html`\n        <oscd-tree\n          .path=${path}\n          .read=${read}\n          .isMandatory=${isMandatory}\n        ></oscd-tree>\n      `;\n\nexport const Regular = Template.bind({});\n\nexport const SingleSelectWithPath = Template.bind({});\nSingleSelectWithPath.args = {\n  path: ['MMXU', 'A', 'phsA', 'cVal', 'mag', 'i'],\n};\n\nexport const MultiSelectWithPaths = Template.bind({});\nMultiSelectWithPaths.args = {\n  multi: true,\n  paths: [\n    ['MMXU', 'A', 'phsA', 'cVal', 'mag', 'i'],\n    ['MMXU', 'A', 'phsA', 'cVal', 'ang', 'i'],\n  ],\n};\n"]}