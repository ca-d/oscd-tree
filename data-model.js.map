{"version":3,"file":"data-model.js","sourceRoot":"","sources":["../data-model.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { nsd73, nsd74 } from './nsd/nsd.js';\n\n/* eslint-disable-next-line no-use-before-define */\ntype DataModel = Record<string, TypeDescription>;\n\ninterface TypeDescription {\n  element: Element;\n  dependencies: DataModel;\n}\n\nexport const data: DataModel = {};\n\nArray.from(nsd74.querySelectorAll('LNClasses > LNClass')).forEach(lnClass => {\n  const name = lnClass.getAttribute('name')!;\n  data[name] = {\n    element: lnClass,\n    dependencies: {},\n  };\n});\n\nfunction abstractClasses(lnClassName: string): Element[] {\n  if (lnClassName === '') return [];\n  const abstractBase = abstractClasses(\n    nsd74\n      .querySelector(\n        `LNClass[name=\"${lnClassName}\"], AbstractLNClass[name=\"${lnClassName}\"]`\n      )\n      ?.getAttribute('base') ?? ''\n  );\n  return Array.from(\n    nsd74.querySelectorAll(`AbstractLNClass[name=\"${lnClassName}\"]`)\n  ).concat(abstractBase);\n}\n\n// FIXME: remove and get info from data model\nfunction getDOs(lnClassName: string) {\n  const lnClass = nsd74.querySelector(\n    `LNClasses > LNClass[name=\"${lnClassName}\"]`\n  );\n  if (!lnClass) return [];\n\n  const abstractLnClasses = abstractClasses(lnClassName);\n  return [lnClass]\n    .concat(abstractLnClasses)\n    .flatMap(lnc => Array.from(lnc.querySelectorAll('DataObject')));\n}\n\nfunction parseCDC(path: string[]) {\n  const [lnClassName, doName, sdoName] = path;\n  const doCDC = getDOs(lnClassName)\n    ?.find(dataObject => dataObject.getAttribute('name') === doName)\n    ?.getAttribute('type');\n\n  if (path.length === 2) return doCDC;\n\n  return (\n    nsd73\n      .querySelector(\n        `CDCs > CDC[name=\"${doCDC}\"] > SubDataObject[name=\"${sdoName}\"]`\n      )\n      ?.getAttribute('type') ?? ''\n  );\n}\n\nexport function addSDAs(dataModel: DataModel) {\n  const das = new Set<TypeDescription>();\n  Object.values(dataModel).forEach(({ dependencies: dos }) => {\n    Object.values(dos).forEach(({ dependencies: sdos }) => {\n      Object.values(sdos).forEach(({ element: sdo, dependencies: ssdos }) => {\n        if (sdo.tagName === 'DataAttribute')\n          das.add({\n            element: sdo,\n            dependencies: ssdos,\n          });\n        Object.values(ssdos).forEach(\n          ({ element: ssdo, dependencies: sdas }) => {\n            if (ssdo.tagName === 'DataAttribute')\n              das.add({\n                element: ssdo,\n                dependencies: sdas,\n              });\n          }\n        );\n      });\n    });\n  });\n  das.forEach(({ element: da, dependencies: sdas }) => {\n    if (da.getAttribute('typeKind') === 'ENUMERATED') {\n      Array.from(\n        nsd73.querySelectorAll(\n          `Enumerations > Enumeration[name=\"${da.getAttribute(\n            'type'\n          )}\"] > Literal`\n        )\n      ).forEach(literal => {\n        sdas[literal.getAttribute('name')!] = {\n          element: literal,\n          dependencies: {},\n        };\n      }); // FIXME: Get Enumerations, ConstructedAttributes etc from other nsds\n    }\n    if (da.getAttribute('typeKind') !== 'CONSTRUCTED') return;\n\n    Array.from(\n      nsd73.querySelectorAll(\n        `ConstructedAttributes > ConstructedAttribute[name=\"${da.getAttribute(\n          'type'\n        )}\"] > SubDataAttribute`\n      )\n    ).forEach(sda => {\n      sdas[sda.getAttribute('name')!] = { element: sda, dependencies: {} };\n      das.add(sdas[sda.getAttribute('name')!]);\n    });\n  });\n}\n\nfunction addDAs(dataModel: DataModel) {\n  Object.values(dataModel).forEach(({ dependencies: dos }) => {\n    Object.values(dos).forEach(\n      ({ element: dataObject, dependencies: sdos }) => {\n        const cdc = dataObject.getAttribute('type');\n        Array.from(\n          nsd73.querySelectorAll(`CDCs > CDC[name=\"${cdc}\"] > DataAttribute`)\n        ).forEach(da => {\n          sdos[da.getAttribute('name')!] = { element: da, dependencies: {} };\n        });\n        Object.values(sdos).forEach(\n          ({ element: subDataObject, dependencies: das }) => {\n            const scdc = subDataObject.getAttribute('type');\n            Array.from(\n              nsd73.querySelectorAll(\n                `CDCs > CDC[name=\"${scdc}\"] > DataAttribute`\n              )\n            ).forEach(da => {\n              das[da.getAttribute('name')!] = { element: da, dependencies: {} };\n            });\n          }\n        );\n      }\n    );\n  });\n}\n\nfunction addSDOs(dataModel: DataModel) {\n  Object.values(dataModel).forEach(\n    ({ element: lnClass, dependencies: dos }) => {\n      const lnClassName = lnClass.getAttribute('name')!;\n      Object.values(dos).forEach(({ element, dependencies }) => {\n        const doName = element.getAttribute('name')!;\n        const cdc = parseCDC([lnClassName, doName]);\n        Array.from(\n          nsd73.querySelectorAll(`CDCs > CDC[name=\"${cdc}\"] > SubDataObject`)\n        ).forEach(sdo => {\n          const sdoName = sdo.getAttribute('name')!;\n          dependencies[sdoName] = {\n            element: sdo,\n            dependencies: {},\n          };\n          const scdc = parseCDC([lnClassName, doName, sdoName]);\n          Array.from(\n            nsd73.querySelectorAll(`CDCs > CDC[name=\"${scdc}\"] > SubDataObject`)\n          ).forEach(ssdo => {\n            dependencies[sdoName].dependencies[ssdo.getAttribute('name')!] = {\n              element: ssdo,\n              dependencies: {},\n            };\n          });\n        });\n      });\n    }\n  );\n}\n\nfunction addDOs(dataModel: DataModel) {\n  Object.values(dataModel).forEach(({ element }) => {\n    const lnClassName = element.getAttribute('name')!;\n    abstractClasses(lnClassName)\n      .concat([element])\n      .flatMap(lnc => Array.from(lnc.querySelectorAll('DataObject')))\n      .forEach(dObj => {\n        dataModel[lnClassName].dependencies[dObj.getAttribute('name')!] = {\n          element: dObj,\n          dependencies: {},\n        };\n      });\n  });\n}\n\naddDOs(data);\naddSDOs(data);\naddDAs(data);\naddSDAs(data);\n"]}